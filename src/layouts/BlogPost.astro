---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { ClientRouter } from 'astro:transitions';
import FormattedDate from '../components/FormattedDate.astro';
import AuthorAvatar from '../components/AuthorAvatar.astro';
import { SITE_TITLE } from '../consts';
import CodeBlock from '../components/svelte/Footer/utils/CodeBlock.svelte';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, author } = Astro.props;

type AuthorObject = { name: string; avatar?: string };
let authors: AuthorObject[] = [];

if (author) {
	if (typeof author === 'string') {
		authors = [{ name: author, avatar: undefined }];
	} else if (Array.isArray(author)) {
		authors = author.map(a => 
			typeof a === 'string' ? { name: a, avatar: undefined } : a
		);
	}
}
---
<html lang="en" class="scroll-smooth min-h-screen">
	<head>
		<BaseHead title={`${title} - ${SITE_TITLE}`} description={description} />
		<style>
			@reference "tailwindcss";
			
			::-webkit-scrollbar {
				width: 8px;
			}
			
			::-webkit-scrollbar-track {
				background: #000000;
			}
			
			::-webkit-scrollbar-thumb {
				background: #8b5cf6;
				border-radius: 4px;
			}
			
			::-webkit-scrollbar-thumb:hover {
				background: #a855f7;
			}
			
			.backdrop-blur-2xl {
				backdrop-filter: blur(32px) !important;
				-webkit-backdrop-filter: blur(32px) !important;
			}
			
            html {
                min-height: 100vh;
                background: linear-gradient(135deg, #000000 0%, #51317e 100%) fixed;
                background-attachment: fixed;
            }
			
			body {
				min-height: 100vh;
				background: transparent;
			}
			
			.prose-content :global(h1) {
				@apply text-3xl font-bold text-[#9082CE] mt-12 mb-6 pb-2 border-b-2 border-purple-400/30;
				text-shadow: 0 0 20px rgba(144, 130, 206, 0.5);
			}
			
			.prose-content :global(h2) {
				@apply text-2xl font-semibold text-[#9082CE] mt-10 mb-5 pb-2 border-b border-purple-400/20;
			}
			
			.prose-content :global(h3) {
				@apply text-xl font-semibold text-purple-400 mt-8 mb-4;
			}
			
			.prose-content :global(h4) {
				@apply text-lg font-semibold text-purple-300 mt-6 mb-3;
			}
			
			.prose-content :global(h5) {
				@apply text-base font-semibold text-purple-300 mt-6 mb-3;
			}
			
			.prose-content :global(h6) {
				@apply text-sm font-semibold text-purple-400 mt-5 mb-2;
			}
			
			.prose-content :global(p) {
				@apply mb-5 leading-relaxed text-gray-300 text-base;
			}
			
			.prose-content :global(a) {
				@apply text-purple-400 hover:text-pink-400 transition-colors duration-200 underline decoration-purple-400/50 hover:decoration-pink-400/50;
			}
			
			.prose-content :global(strong) {
				@apply text-purple-300 font-semibold;
			}
			
			.prose-content :global(em) {
				@apply text-purple-200 italic;
			}
			
			.prose-content :global(ul) {
				@apply mb-5 pl-6 space-y-2;
			}
			
			.prose-content :global(ol) {
				@apply mb-5 pl-6 space-y-2;
			}
			
			.prose-content :global(li) {
				@apply text-gray-300 leading-relaxed;
			}
			
			.prose-content :global(ul li) {
				@apply relative;
			}
			
			.prose-content :global(ul li::before) {
				content: '';
				@apply absolute left-[-1.5rem] top-[0.6rem] w-2 h-2 bg-purple-400 rounded-full;
			}
			
			.prose-content :global(ol li) {
				@apply relative;
			}
			
			.prose-content :global(blockquote) {
				@apply border-l-4 border-purple-400 pl-6 py-4 my-6 bg-slate-800/50 rounded-r-lg;
			}
			
			.prose-content :global(blockquote p) {
				@apply text-purple-200 italic mb-0;
			}
			
			.prose-content :global(code) {
				@apply bg-gradient-to-r from-purple-900/30 to-purple-800/30 text-purple-300 px-2 py-1 rounded text-base font-mono;
			}
			
			.prose-content :global(table) {
				@apply w-full my-6 border-collapse;
			}
			
			.prose-content :global(th) {
				@apply bg-purple-900/30 text-purple-300 font-semibold p-3 border border-purple-500/30;
			}
			
			.prose-content :global(td) {
				@apply p-3 border border-purple-500/20 text-gray-300;
			}
			
			.prose-content :global(hr) {
				@apply my-8 border-purple-400/30;
			}
			
			.prose-content :global(pre) {
				@apply relative bg-[#1A1B26] border border-purple-500/30 rounded-xl my-6 p-0;
				box-shadow: 0 0 20px rgba(168, 85, 247, 0.25);
				overflow: hidden;
			}

			.prose-content :global(.code-container) {
				@apply flex items-stretch;
			}

			.prose-content :global(pre code) {
				@apply block overflow-x-auto pr-4 py-4 text-base flex-1;
				font-family: 'Fira Code', monospace;
				line-height: 1.6;
				background-color: #221032; /* Ensure it has a background */
			}

			.prose-content :global(.line-numbers-wrapper) {
				@apply w-12 shrink-0 text-right pr-4 pt-4 text-white select-none text-base;
				font-family: 'Fira Code', monospace;
				line-height: 1.6;
				background-color: #442560; /* Different background for distinction */
				border-right: 1px solid rgba(168, 85, 247, 0.2);
			}

			.prose-content :global(.copy-button) {
				@apply absolute top-3 right-3 bg-slate-800/50 text-gray-300 hover:bg-purple-600/70 hover:text-white p-2 rounded-lg transition-colors duration-200 z-10;
			}

			.prose-content :global(.copy-button[data-copied]) {
				@apply bg-purple-600/80 text-white;
			}
			
		</style>
	</head>
	<body class="min-h-screen">
		<Header />
        <main transition:animate="slide" class="w-full max-w-4xl mx-auto px-4 py-8 min-h-[calc(100vh-120px)]">
			<article>
				<div class="text-center mb-12">
					<!-- Author Display -->
					{authors.length > 0 && (
						<div class="flex items-center justify-center gap-3 mb-6">
							{authors.map((authorObj) => (
								<div class="flex items-center gap-2">
									<AuthorAvatar author={authorObj.name} avatar={authorObj.avatar} size="md" />
									<span class="text-purple-300 font-medium">{authorObj.name}</span>
								</div>
							))}
						</div>
					)}
					
					<div class="text-purple-400 text-sm font-mono mb-4 flex items-center justify-center gap-2">
						<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
						</svg>
						<FormattedDate date={pubDate} />
						{updatedDate && (
							<>
								<span class="text-gray-500">â€¢</span>
								<span class="text-gray-400 text-xs">Updated: <FormattedDate date={updatedDate} /></span>
							</>
						)}
					</div>
					
					<h1 class="text-4xl md:text-5xl font-bold text-white mb-6 leading-tight">
						{title}
					</h1>
					
					{description && (
						<p class="text-xl text-gray-300 mb-8 max-w-2xl mx-auto leading-relaxed">
							{description}
						</p>
					)}
				</div>
			</article>
			
			<div class="max-w-none prose-content">
				<slot />
			</div>
		</main>
		<Footer />

        <!-- Code Block -->
        <CodeBlock client:only="svelte" />
		<ClientRouter />
	</body>
</html>
